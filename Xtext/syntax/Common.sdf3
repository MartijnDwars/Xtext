module Common

lexical syntax

	ID               = "^"? [a-zA-Z\_] [a-zA-Z\_0-9]*
	
	// STRING           = "\"" DoubleStringChar* "\""
	// STRING           = "'" SingleStringChar* "'"
	DoubleStringChars =  DoubleStringChar*
	DoubleStringChar = ~[\"\n]
	SingleStringChars = SingleStringChar*
	SingleStringChar = ~[\'\n] 
	
	// StringChar     = "\\\"" 
	// StringChar     = BackSlashChar 
	// BackSlashChar  = "\\" 
	LAYOUT         = [\ \t\n\r] 
	CommentChar    = [\*] 
	LAYOUT         = "/*" InsideComment* "*/" 
	InsideComment  = ~[\*] 
	InsideComment  = CommentChar 
	LAYOUT         = "//" ~[\n\r]* NewLineEOF 
	NewLineEOF     = [\n\r] 
	NewLineEOF     = EOF 
	EOF            =  
 	WILDCARD = [\.]

  // Reserved keywords
  //ID = "terminal" {reject}

lexical restrictions

	// Ensure greedy matching for lexicals
	
	CommentChar   -/- [\/]
	// INT           -/- [0-9]
	ID            -/- [a-zA-Z0-9\_]
	
  WILDCARD -/- [\.]
  
	// EOF may not be followed by any char
	
	EOF           -/- ~[]
	
	// Backslash chars in strings may not be followed by " 
	
	// BackSlashChar -/- [\"]

context-free restrictions

	// Ensure greedy matching for comments
	
	LAYOUT? -/- [\ \t\n\r]
	LAYOUT? -/- [\/].[\/]
	LAYOUT? -/- [\/].[\*]

context-free syntax

  Cardinality.Optional = <?>
  Cardinality.Multiple = <+>
  Cardinality.Any = <*>
  
  STRING = <"<DoubleStringChars>">
  STRING = <'<SingleStringChars>'>
