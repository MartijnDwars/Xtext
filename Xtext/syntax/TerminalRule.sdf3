module TerminalRule

imports
  
  Common
  ParserRule

context-free start-symbols
  
  // These sorts are only added to allow testing:
  AbstractRule
  
context-free syntax
  
  AbstractRule.TerminalRule = <terminal <TerminalName> : <TerminalAlternatives+> ;>
  TerminalName.Fragment = "fragment" ID
  TerminalName.Returns = ID Returns?
  TerminalAlternatives.TerminalAlternatives = TerminalGroup
  TerminalGroup.TerminalGroup = TerminalToken
  TerminalToken.TerminalToken = TerminalTokenElement Cardinality?
  TerminalTokenElement.ParenthesizedTerminalElement = "(" TerminalAlternatives ")"
  TerminalTokenElement.Keyword = STRING
  TerminalTokenElement.RuleCall = RuleCall
  TerminalTokenElement.CharacterRange = <<STRING> .. <STRING>>
  TerminalTokenElement.Wildcard = WILDCARD
  TerminalTokenElement.NegatedToken = "!" TerminalTokenElement
  TerminalTokenElement.UntilToken = "->" TerminalTokenElement
  TerminalTokenElement.TerminalTokenElement = EOF
  EOF.EOF = "EOF"
