module Xtext
imports Common ParserRule TerminalRule EnumRule

exports
  context-free start-symbols
    Start ID

  context-free syntax
    {ID "."}+                                           -> GrammarID {cons("GrammarID")}
    "with" {GrammarID ","}+                             -> Mixin     {cons("Mixin")}
    "as" ID                                             -> Alias     {cons("Alias")}
    "generate" ID STRING Alias?                         -> Metamodel {cons("GeneratedMetamodel")}
    "import" STRING Alias?                              -> Metamodel {cons("ReferencedMetamodel")}
    "grammar" GrammarID Mixin? Metamodel* AbstractRule+ -> Start     {cons("Grammar")}

  context-free syntax
    CONTENTCOMPLETE -> GrammarID {cons("COMPLETION-GrammarID")}
    CONTENTCOMPLETE -> Mixin     {cons("COMPLETION-Mixin")}
    CONTENTCOMPLETE -> Alias     {cons("COMPLETION-Alias")}
    CONTENTCOMPLETE -> Metamodel {cons("COMPLETION-Metamodel")}
    CONTENTCOMPLETE -> Start     {cons("COMPLETION-Start")}