
module src-gen/completions/ParserRule-esv

imports
  src-gen/completions/Common-esv

completions
  completion template Operator : "=" =
    "="                                                                        
  completion template Operator : "+=" =
    "+="                                                                      
  completion template Operator : "?=" =
    "?="                                                                      
  completion template TypeRef : " ID" =
    <:AbstractMetaModelReference> " " <ID:ID>                                 
  completion template TypeRef : " ecore :: Classifier " =
    " ecore :: " <Classifier:Classifier> " "                
  completion template AbstractMetaModelReference : "STRING ::" =
    <STRING:STRING> " ::"                            
  completion template Classifier : "EClassifier" =
    "EClassifier"                                                  
  completion template AbstractRule : "ID : Alternatives ;" =
    <ID:ID> " " <:Returns> " " <:HiddenToken> ": " <Alternatives:Alternatives> " ;"  
  completion template Returns : "returns TypeRef" =
    "returns " <TypeRef:TypeRef>                                  
  completion template HiddenToken : "hidden ( RuleCall )" =
    "hidden ( " <RuleCall:RuleCall> " )"                  
  completion template AbstractToken : " ID Operator AssignableTerminal " =
    <:Predicated> " " <ID:ID> " " <Operator:Operator> " " <AssignableTerminal:AssignableTerminal> " " <:Cardinality>  
  completion template AbstractToken : "AbstractTerminal " =
    <AbstractTerminal:AbstractTerminal> " " <:Cardinality>  
  completion template Predicated : "=>" =
    "=>"                                                                    
  completion template Predicated : "->" =
    "->"                                                                    
  completion template AssignableTerminal : "[ TypeRef ]" =
    "[ " <TypeRef:TypeRef> " ]"                            
  completion template ParenthesizedAssignableElement : "( AssignableAlternatives )" =
    "( " <AssignableAlternatives:AssignableAlternatives> " )"  
  completion template Action : "{ TypeRef }" =
    "{ " <TypeRef:TypeRef> " " <:ActionCurrent> " }"                   
  completion template ActionCurrent : ". ID Operator current" =
    ". " <ID:ID> " " <Operator:Operator> " current"   
  completion template AbstractTerminal : "( Alternatives )" =
    "( " <Alternatives:Alternatives> " )"               
  completion template AbstractTerminal : "Predicated STRING" =
    <Predicated:Predicated> " " <STRING:STRING>        
  completion template AbstractTerminal : "Predicated RuleCall" =
    <Predicated:Predicated> " " <RuleCall:RuleCall>  
  completion template AbstractTerminal : "Predicated ( Alternatives )" =
    <Predicated:Predicated> " ( " <Alternatives:Alternatives> " )"  