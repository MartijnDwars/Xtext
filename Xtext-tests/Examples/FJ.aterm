Grammar(
  GrammarID(["org", "eclipse", "xtext", "example", "FJ"])
, Some(
    Mixin(
      [GrammarID(["org", "eclipse", "xtext", "common", "Terminals"])]
    )
  )
, None()
, [GeneratedMetamodel("fj", "http://example.xtext.org/FJ", None())]
, [ ParserRule(
      "Program"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AbstractTerminalAbstractToken(
                    Alternatives(
                      [ UnorderedGroup(
                          [Group(
                             [AssignmentAbstractToken(None(), "classes", AddAssignment(), RuleCall("Class"), None())]
                           )]
                        )
                      ]
                    )
                  , Some(Any())
                  )
                , AbstractTerminalAbstractToken(
                    Alternatives(
                      [ UnorderedGroup(
                          [Group(
                             [AssignmentAbstractToken(None(), "main", Assignment(), RuleCall("Expression"), None())]
                           )]
                        )
                      ]
                    )
                  , Some(Optional())
                  )
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "Type"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("BasicType"), None())])])
        , UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("ClassType"), None())])])
        ]
      )
    )
  , ParserRule(
      "BasicType"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AssignmentAbstractToken(
                    None()
                  , "basic"
                  , Assignment()
                  , AssignableAlternatives([Keyword("int"), Keyword("boolean"), Keyword("String")])
                  , None()
                  )
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "ClassType"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [AssignmentAbstractToken(
                   None()
                 , "classref"
                 , Assignment()
                 , CrossReference(TypeRef(None(), "Class"))
                 , None()
                 )]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "TypedElement"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("Field"), None())])])
        , UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("Parameter"), None())])])
        ]
      )
    )
  , ParserRule(
      "Class"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AbstractTerminalAbstractToken(Keyword("class"), None())
                , AssignmentAbstractToken(None(), "name", Assignment(), RuleCall("ID"), None())
                , AbstractTerminalAbstractToken(
                    Alternatives(
                      [ UnorderedGroup(
                          [ Group(
                              [ AbstractTerminalAbstractToken(Keyword("extends"), None())
                              , AssignmentAbstractToken(
                                  None()
                                , "extends"
                                , Assignment()
                                , CrossReference(TypeRef(None(), "Class"))
                                , None()
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  , Some(Optional())
                  )
                , AbstractTerminalAbstractToken(Keyword("{"), None())
                , AbstractTerminalAbstractToken(
                    Alternatives(
                      [ UnorderedGroup(
                          [Group(
                             [AssignmentAbstractToken(None(), "fields", AddAssignment(), RuleCall("Field"), None())]
                           )]
                        )
                      ]
                    )
                  , Some(Any())
                  )
                , AbstractTerminalAbstractToken(
                    Alternatives(
                      [ UnorderedGroup(
                          [Group(
                             [AssignmentAbstractToken(None(), "methods", AddAssignment(), RuleCall("Method"), None())]
                           )]
                        )
                      ]
                    )
                  , Some(Any())
                  )
                , AbstractTerminalAbstractToken(Keyword("}"), None())
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "Field"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AssignmentAbstractToken(None(), "type", Assignment(), RuleCall("Type"), None())
                , AssignmentAbstractToken(None(), "name", Assignment(), RuleCall("ID"), None())
                , AbstractTerminalAbstractToken(Keyword(";"), None())
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "Parameter"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AssignmentAbstractToken(None(), "type", Assignment(), RuleCall("Type"), None())
                , AssignmentAbstractToken(None(), "name", Assignment(), RuleCall("ID"), None())
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "Method"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AssignmentAbstractToken(None(), "returntype", Assignment(), RuleCall("Type"), None())
                , AssignmentAbstractToken(None(), "name", Assignment(), RuleCall("ID"), None())
                , AbstractTerminalAbstractToken(Keyword("("), None())
                , AbstractTerminalAbstractToken(
                    Alternatives(
                      [ UnorderedGroup(
                          [ Group(
                              [ AssignmentAbstractToken(None(), "params", AddAssignment(), RuleCall("Parameter"), None())
                              , AbstractTerminalAbstractToken(
                                  Alternatives(
                                    [ UnorderedGroup(
                                        [ Group(
                                            [ AbstractTerminalAbstractToken(Keyword(","), None())
                                            , AssignmentAbstractToken(None(), "params", AddAssignment(), RuleCall("Parameter"), None())
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                , Some(Any())
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  , Some(Optional())
                  )
                , AbstractTerminalAbstractToken(Keyword(")"), None())
                , AbstractTerminalAbstractToken(Keyword("{"), None())
                , AssignmentAbstractToken(None(), "body", Assignment(), RuleCall("MethodBody"), None())
                , AbstractTerminalAbstractToken(Keyword("}"), None())
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "MethodBody"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AbstractTerminalAbstractToken(Keyword("return"), None())
                , AssignmentAbstractToken(None(), "expression", Assignment(), RuleCall("Expression"), None())
                , AbstractTerminalAbstractToken(Keyword(";"), None())
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "Expression"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AbstractTerminalAbstractToken(RuleCall("TerminalExpression"), None())
                , AbstractTerminalAbstractToken(
                    Alternatives(
                      [ UnorderedGroup(
                          [ Group(
                              [ ActionAbstractToken(
                                  Action(TypeRef(None(), "Selection"), Some(ActionCurrent("receiver", Assignment())))
                                )
                              , AbstractTerminalAbstractToken(Keyword("."), None())
                              , AssignmentAbstractToken(None(), "message", Assignment(), RuleCall("Message"), None())
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  , Some(Any())
                  )
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "Message"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("MethodCall"), None())])])
        , UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("FieldSelection"), None())])])
        ]
      )
    )
  , ParserRule(
      "MethodCall"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AssignmentAbstractToken(
                    None()
                  , "name"
                  , Assignment()
                  , CrossReference(TypeRef(None(), "Method"))
                  , None()
                  )
                , AbstractTerminalAbstractToken(Keyword("("), None())
                , AbstractTerminalAbstractToken(
                    Alternatives(
                      [ UnorderedGroup(
                          [ Group(
                              [ AssignmentAbstractToken(None(), "args", AddAssignment(), RuleCall("Argument"), None())
                              , AbstractTerminalAbstractToken(
                                  Alternatives(
                                    [ UnorderedGroup(
                                        [ Group(
                                            [ AbstractTerminalAbstractToken(Keyword(","), None())
                                            , AssignmentAbstractToken(None(), "args", AddAssignment(), RuleCall("Argument"), None())
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                , Some(Any())
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  , Some(Optional())
                  )
                , AbstractTerminalAbstractToken(Keyword(")"), None())
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "FieldSelection"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [AssignmentAbstractToken(
                   None()
                 , "name"
                 , Assignment()
                 , CrossReference(TypeRef(None(), "Field"))
                 , None()
                 )]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "TerminalExpression"
    , Some(Returns(TypeRef(None(), "Expression")))
    , None()
    , Alternatives(
        [ UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("This"), None())])])
        , UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("Variable"), None())])])
        , UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("New"), None())])])
        , UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("Cast"), None())])])
        , UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("Constant"), None())])])
        , UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("Paren"), None())])])
        ]
      )
    )
  , ParserRule(
      "This"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [Group(
               [AssignmentAbstractToken(None(), "variable", Assignment(), Keyword("this"), None())]
             )]
          )
        ]
      )
    )
  , ParserRule(
      "Variable"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [AssignmentAbstractToken(
                   None()
                 , "paramref"
                 , Assignment()
                 , CrossReference(TypeRef(None(), "Parameter"))
                 , None()
                 )]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "New"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AbstractTerminalAbstractToken(Keyword("new"), None())
                , AssignmentAbstractToken(None(), "type", Assignment(), RuleCall("ClassType"), None())
                , AbstractTerminalAbstractToken(Keyword("("), None())
                , AbstractTerminalAbstractToken(
                    Alternatives(
                      [ UnorderedGroup(
                          [ Group(
                              [ AssignmentAbstractToken(None(), "args", AddAssignment(), RuleCall("Argument"), None())
                              , AbstractTerminalAbstractToken(
                                  Alternatives(
                                    [ UnorderedGroup(
                                        [ Group(
                                            [ AbstractTerminalAbstractToken(Keyword(","), None())
                                            , AssignmentAbstractToken(None(), "args", AddAssignment(), RuleCall("Argument"), None())
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                , Some(Any())
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  , Some(Optional())
                  )
                , AbstractTerminalAbstractToken(Keyword(")"), None())
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "Cast"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AbstractTerminalAbstractToken(Keyword("("), None())
                , AssignmentAbstractToken(None(), "type", Assignment(), RuleCall("ClassType"), None())
                , AbstractTerminalAbstractToken(Keyword(")"), None())
                , AssignmentAbstractToken(None(), "object", Assignment(), RuleCall("TerminalExpression"), None())
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "Paren"
    , Some(Returns(TypeRef(None(), "Expression")))
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AbstractTerminalAbstractToken(Keyword("("), None())
                , AbstractTerminalAbstractToken(RuleCall("Expression"), None())
                , AbstractTerminalAbstractToken(Keyword(")"), None())
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "Constant"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("IntConstant"), None())])])
        , UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("BoolConstant"), None())])])
        , UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("StringConstant"), None())])])
        ]
      )
    )
  , ParserRule(
      "StringConstant"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [Group(
               [AssignmentAbstractToken(None(), "constant", Assignment(), RuleCall("STRING"), None())]
             )]
          )
        ]
      )
    )
  , ParserRule(
      "IntConstant"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [Group(
               [AssignmentAbstractToken(None(), "constant", Assignment(), RuleCall("INT"), None())]
             )]
          )
        ]
      )
    )
  , ParserRule(
      "BoolConstant"
    , None()
    , None()
    , Alternatives(
        [ UnorderedGroup(
            [ Group(
                [ AssignmentAbstractToken(
                    None()
                  , "constant"
                  , Assignment()
                  , AssignableAlternatives([Keyword("true"), Keyword("false")])
                  , None()
                  )
                ]
              )
            ]
          )
        ]
      )
    )
  , ParserRule(
      "Argument"
    , None()
    , None()
    , Alternatives(
        [UnorderedGroup([Group([AbstractTerminalAbstractToken(RuleCall("Expression"), None())])])]
      )
    )
  ]
)