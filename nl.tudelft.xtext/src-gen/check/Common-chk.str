module src-gen/check/Common-chk

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  src-gen/signatures/Common-sig


strategies
  check-ID =
    is-string

  check-STRING =
    is-string

  check-DoubleStringChars =
    is-string

  check-DoubleStringChar =
    is-string

  check-SingleStringChars =
    is-string

  check-SingleStringChar =
    is-string

  check-CommentChar =
    is-string

  check-InsideComment =
    is-string

  check-NewLineEOF =
    is-string

  check-EOF =
    is-string

  check-WILDCARD =
    is-string

  check-ECore =
    is-string

  check-example =
    check-ID

  check-example =
    check-STRING

  check-example =
    check-DoubleStringChars

  check-example =
    check-DoubleStringChar

  check-example =
    check-SingleStringChars

  check-example =
    check-SingleStringChar

  check-example =
    check-CommentChar

  check-example =
    check-InsideComment

  check-example =
    check-NewLineEOF

  check-example =
    check-EOF

  check-example =
    check-WILDCARD

  check-example =
    check-ECore

  check-ID :
    amb([h|hs]) -> <check-ID> h

  check-STRING :
    amb([h|hs]) -> <check-STRING> h

  check-DoubleStringChars :
    amb([h|hs]) -> <check-DoubleStringChars> h

  check-DoubleStringChar :
    amb([h|hs]) -> <check-DoubleStringChar> h

  check-SingleStringChars :
    amb([h|hs]) -> <check-SingleStringChars> h

  check-SingleStringChar :
    amb([h|hs]) -> <check-SingleStringChar> h

  check-CommentChar :
    amb([h|hs]) -> <check-CommentChar> h

  check-InsideComment :
    amb([h|hs]) -> <check-InsideComment> h

  check-NewLineEOF :
    amb([h|hs]) -> <check-NewLineEOF> h

  check-EOF :
    amb([h|hs]) -> <check-EOF> h

  check-WILDCARD :
    amb([h|hs]) -> <check-WILDCARD> h

  check-ECore :
    amb([h|hs]) -> <check-ECore> h

  error-ID =
    debug(!"Unexpected constructor. Expected string from sort ID instead. ")

  error-STRING =
    debug(!"Unexpected constructor. Expected string from sort STRING instead. ")

  error-DoubleStringChars =
    debug(!"Unexpected constructor. Expected string from sort DoubleStringChars instead. ")

  error-DoubleStringChar =
    debug(!"Unexpected constructor. Expected string from sort DoubleStringChar instead. ")

  error-SingleStringChars =
    debug(!"Unexpected constructor. Expected string from sort SingleStringChars instead. ")

  error-SingleStringChar =
    debug(!"Unexpected constructor. Expected string from sort SingleStringChar instead. ")

  error-CommentChar =
    debug(!"Unexpected constructor. Expected string from sort CommentChar instead. ")

  error-InsideComment =
    debug(!"Unexpected constructor. Expected string from sort InsideComment instead. ")

  error-NewLineEOF =
    debug(!"Unexpected constructor. Expected string from sort NewLineEOF instead. ")

  error-EOF =
    debug(!"Unexpected constructor. Expected string from sort EOF instead. ")

  error-WILDCARD =
    debug(!"Unexpected constructor. Expected string from sort WILDCARD instead. ")

  error-ECore =
    debug(!"Unexpected constructor. Expected string from sort ECore instead. ")


strategies
  check-example =
    check-Cardinality

  check-Cardinality :
    Optional() -> <id>

  is-Cardinality-with-constructor =
    ?Optional()

  check-Cardinality :
    Multiple() -> <id>

  is-Cardinality-with-constructor =
    ?Multiple()

  check-Cardinality :
    Any() -> <id>

  is-Cardinality-with-constructor =
    ?Any()

  is-Cardinality-with-constructor =
    fail

  check-Cardinality :
    amb([h|hs]) -> <check-Cardinality> h

  error-Cardinality =
    debug(!"Unexpected constructor. Expected constructor from sort Cardinality instead. ")